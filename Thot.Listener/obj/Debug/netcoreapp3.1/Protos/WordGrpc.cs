// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/word.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Thot.Listener {
  public static partial class Words
  {
    static readonly string __ServiceName = "word.Words";

    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    static readonly grpc::Marshaller<global::Thot.Listener.AddRequest> __Marshaller_word_AddRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Thot.Listener.AddRequest.Parser));
    static readonly grpc::Marshaller<global::Thot.Listener.ResultMessage> __Marshaller_word_ResultMessage = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Thot.Listener.ResultMessage.Parser));
    static readonly grpc::Marshaller<global::Thot.Listener.RemoveRequest> __Marshaller_word_RemoveRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Thot.Listener.RemoveRequest.Parser));
    static readonly grpc::Marshaller<global::Thot.Listener.ListRequest> __Marshaller_word_ListRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Thot.Listener.ListRequest.Parser));
    static readonly grpc::Marshaller<global::Thot.Listener.ListResponse> __Marshaller_word_ListResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Thot.Listener.ListResponse.Parser));
    static readonly grpc::Marshaller<global::Thot.Listener.ResetRequest> __Marshaller_word_ResetRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Thot.Listener.ResetRequest.Parser));

    static readonly grpc::Method<global::Thot.Listener.AddRequest, global::Thot.Listener.ResultMessage> __Method_Add = new grpc::Method<global::Thot.Listener.AddRequest, global::Thot.Listener.ResultMessage>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Add",
        __Marshaller_word_AddRequest,
        __Marshaller_word_ResultMessage);

    static readonly grpc::Method<global::Thot.Listener.RemoveRequest, global::Thot.Listener.ResultMessage> __Method_Remove = new grpc::Method<global::Thot.Listener.RemoveRequest, global::Thot.Listener.ResultMessage>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Remove",
        __Marshaller_word_RemoveRequest,
        __Marshaller_word_ResultMessage);

    static readonly grpc::Method<global::Thot.Listener.ListRequest, global::Thot.Listener.ListResponse> __Method_List = new grpc::Method<global::Thot.Listener.ListRequest, global::Thot.Listener.ListResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "List",
        __Marshaller_word_ListRequest,
        __Marshaller_word_ListResponse);

    static readonly grpc::Method<global::Thot.Listener.ResetRequest, global::Thot.Listener.ResultMessage> __Method_Reset = new grpc::Method<global::Thot.Listener.ResetRequest, global::Thot.Listener.ResultMessage>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Reset",
        __Marshaller_word_ResetRequest,
        __Marshaller_word_ResultMessage);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Thot.Listener.WordReflection.Descriptor.Services[0]; }
    }

    /// <summary>Client for Words</summary>
    public partial class WordsClient : grpc::ClientBase<WordsClient>
    {
      /// <summary>Creates a new client for Words</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public WordsClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for Words that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public WordsClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected WordsClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected WordsClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::Thot.Listener.ResultMessage Add(global::Thot.Listener.AddRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Add(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Thot.Listener.ResultMessage Add(global::Thot.Listener.AddRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Add, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Thot.Listener.ResultMessage> AddAsync(global::Thot.Listener.AddRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Thot.Listener.ResultMessage> AddAsync(global::Thot.Listener.AddRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Add, null, options, request);
      }
      public virtual global::Thot.Listener.ResultMessage Remove(global::Thot.Listener.RemoveRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Remove(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Thot.Listener.ResultMessage Remove(global::Thot.Listener.RemoveRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Remove, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Thot.Listener.ResultMessage> RemoveAsync(global::Thot.Listener.RemoveRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Thot.Listener.ResultMessage> RemoveAsync(global::Thot.Listener.RemoveRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Remove, null, options, request);
      }
      public virtual global::Thot.Listener.ListResponse List(global::Thot.Listener.ListRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return List(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Thot.Listener.ListResponse List(global::Thot.Listener.ListRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_List, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Thot.Listener.ListResponse> ListAsync(global::Thot.Listener.ListRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Thot.Listener.ListResponse> ListAsync(global::Thot.Listener.ListRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_List, null, options, request);
      }
      public virtual global::Thot.Listener.ResultMessage Reset(global::Thot.Listener.ResetRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Reset(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Thot.Listener.ResultMessage Reset(global::Thot.Listener.ResetRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Reset, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Thot.Listener.ResultMessage> ResetAsync(global::Thot.Listener.ResetRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResetAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Thot.Listener.ResultMessage> ResetAsync(global::Thot.Listener.ResetRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Reset, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override WordsClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new WordsClient(configuration);
      }
    }

  }
}
#endregion
